// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WS.Infrastructure.Data;

#nullable disable

namespace WS.Infrastructure.Migrations
{
    [DbContext(typeof(WarningSentenceContext))]
    [Migration("20240418083158_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WS.Core.Entities.WSAggregate.WarningCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WarningTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WarningTypeId");

                    b.ToTable("WarningCategories");
                });

            modelBuilder.Entity("WS.Core.Entities.WSAggregate.WarningPictogram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pictogram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WarningPictograms");
                });

            modelBuilder.Entity("WS.Core.Entities.WSAggregate.WarningSentence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WarningCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("WarningPictogramId")
                        .HasColumnType("int");

                    b.Property<int>("WarningSignalWordId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WarningCategoryId");

                    b.HasIndex("WarningPictogramId");

                    b.HasIndex("WarningSignalWordId");

                    b.ToTable("WarningSentences");
                });

            modelBuilder.Entity("WS.Core.Entities.WSAggregate.WarningSignalWord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("SignalWordText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WarningSignalWords");
                });

            modelBuilder.Entity("WS.Core.Entities.WSAggregate.WarningType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WarningTypes");
                });

            modelBuilder.Entity("WS.Core.Entities.WSAggregate.WarningCategory", b =>
                {
                    b.HasOne("WS.Core.Entities.WSAggregate.WarningType", "WarningType")
                        .WithMany("WarningCategories")
                        .HasForeignKey("WarningTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WarningType");
                });

            modelBuilder.Entity("WS.Core.Entities.WSAggregate.WarningSentence", b =>
                {
                    b.HasOne("WS.Core.Entities.WSAggregate.WarningCategory", "WarningCategory")
                        .WithMany("WarningSentences")
                        .HasForeignKey("WarningCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WS.Core.Entities.WSAggregate.WarningPictogram", "WarningPictogram")
                        .WithMany("WarningSentences")
                        .HasForeignKey("WarningPictogramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WS.Core.Entities.WSAggregate.WarningSignalWord", "WarningSignalWord")
                        .WithMany("WarningSentences")
                        .HasForeignKey("WarningSignalWordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WarningCategory");

                    b.Navigation("WarningPictogram");

                    b.Navigation("WarningSignalWord");
                });

            modelBuilder.Entity("WS.Core.Entities.WSAggregate.WarningCategory", b =>
                {
                    b.Navigation("WarningSentences");
                });

            modelBuilder.Entity("WS.Core.Entities.WSAggregate.WarningPictogram", b =>
                {
                    b.Navigation("WarningSentences");
                });

            modelBuilder.Entity("WS.Core.Entities.WSAggregate.WarningSignalWord", b =>
                {
                    b.Navigation("WarningSentences");
                });

            modelBuilder.Entity("WS.Core.Entities.WSAggregate.WarningType", b =>
                {
                    b.Navigation("WarningCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
